#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
#include "USART.h"


// Button state. 0 = idle, 1 = active
volatile int8_t state = 0;


ISR(TIMER1_COMPA_vect)
{
    if (state == 1) {
        // Toggle for flash
        PORTB ^= (1 << PB4);
    }
}


uint8_t read_button()
{
    if (bit_is_clear(PINC, PC5)) {
        return 1;
    }
    return 0;
}


int main(void)
{
    // Configure PINS
    PORTC |= (1 << PC5);
    DDRB = 0XFF;

    // initialize timer
    cli();
    TCCR1A = 0;
    TCCR1B = 0;

    OCR1A = 15624;
    TCCR1B |= (1 << WGM12);
    TCCR1B |= (1 << CS10);
    TCCR1B |= (1 << CS12);
    TIMSK1 |= (1 << OCIE1A);
    sei();

    // Send ready code
    transmitByte('O');

    for(;;) {
        if (read_button()) {
            if (state == 1) {
                state = 0;

                // Turn off LED
                PORTB &= ~(1 << PB4);

                // Transmit message
                transmitByte('S');
            } else {
                state = 1;

                // Turn on LED
                PORTB |= (1 << PB4);

                // Transmit message
                transmitByte('N');
            }

            // Prevent crazy presses
            _delay_ms(500);
        }
    }

    return 0;
}
